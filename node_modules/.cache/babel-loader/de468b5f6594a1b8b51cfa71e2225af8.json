{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Projects\\\\COVID-Tracker\\\\COVID-Tracker\\\\src\\\\components\\\\Chart\\\\Chart.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { Line, HorizontalBar } from 'react-chartjs-2';\nimport { fetchDailyData } from './../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({\n  dataset,\n  country\n}) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    async function loadData() {\n      const data = await fetchDailyData();\n      setDailyData(data);\n    }\n\n    loadData();\n  }, []);\n  const barChart = dataset.confirmed ? /*#__PURE__*/React.createElement(HorizontalBar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: ['rgba(164, 17, 184, 0.5)', 'rgba(39, 145, 13, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n        data: [dataset.confirmed.value, dataset.recovered.value, dataset.deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current state in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }) : null;\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(data => data.confirmed),\n        label: 'Infected',\n        borderColor: '#a411b880',\n        fill: true\n      }, {\n        data: dailyData.map(data => data.deaths),\n        label: 'Deaths',\n        borderColor: '#ff000080',\n        backgroundColor: 'rgba(255, 0, 0, 0.5)',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, country !== 'Global' ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["D:/Web Projects/COVID-Tracker/COVID-Tracker/src/components/Chart/Chart.jsx"],"names":["React","useEffect","useState","Line","HorizontalBar","fetchDailyData","styles","Chart","dataset","country","dailyData","setDailyData","loadData","data","barChart","confirmed","labels","datasets","label","backgroundColor","value","recovered","deaths","legend","display","title","text","lineChart","map","date","borderColor","fill","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,aAAf,QAAoC,iBAApC;AACA,SAAQC,cAAR,QAA6B,aAA7B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,OAAD;AAASC,EAAAA;AAAT,CAAD,KAAuB;AACjC,QAAM,CAACC,SAAD,EAAWC,YAAX,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,mBAAeW,QAAf,GAA0B;AACtB,YAAMC,IAAI,GAAG,MAAMR,cAAc,EAAjC;AACAM,MAAAA,YAAY,CAACE,IAAD,CAAZ;AACH;;AACDD,IAAAA,QAAQ;AAEX,GAPQ,EAOP,EAPO,CAAT;AASA,QAAME,QAAQ,GAEVN,OAAO,CAACO,SAAR,gBACI,oBAAC,aAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,QADT;AAEEC,QAAAA,eAAe,EAAE,CAAC,yBAAD,EAA4B,wBAA5B,EAAsD,sBAAtD,CAFnB;AAGEN,QAAAA,IAAI,EAAE,CAACL,OAAO,CAACO,SAAR,CAAkBK,KAAnB,EAA0BZ,OAAO,CAACa,SAAR,CAAkBD,KAA5C,EAAmDZ,OAAO,CAACc,MAAR,CAAeF,KAAlE;AAHR,OADQ;AAFN,KADR;AAWE,IAAA,OAAO,EAAE;AACPG,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADD;AAEPC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,EAAG,oBAAmBjB,OAAQ;AAAnD;AAFA,KAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAiBC,IAnBL;AAsBA,QAAMkB,SAAS,GACXjB,SAAS,CAAC,CAAD,CAAT,gBACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJM,MAAAA,MAAM,EAAEN,SAAS,CAACkB,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADJ;AAEJZ,MAAAA,QAAQ,EAAE,CAAC;AACTJ,QAAAA,IAAI,EAAEH,SAAS,CAACkB,GAAV,CAAef,IAAD,IAAUA,IAAI,CAACE,SAA7B,CADG;AAETG,QAAAA,KAAK,EAAE,UAFE;AAGTY,QAAAA,WAAW,EAAE,WAHJ;AAITC,QAAAA,IAAI,EAAE;AAJG,OAAD,EAKP;AACDlB,QAAAA,IAAI,EAAEH,SAAS,CAACkB,GAAV,CAAef,IAAD,IAAUA,IAAI,CAACS,MAA7B,CADL;AAEDJ,QAAAA,KAAK,EAAE,QAFN;AAGDY,QAAAA,WAAW,EAAE,WAHZ;AAIDX,QAAAA,eAAe,EAAE,sBAJhB;AAKDY,QAAAA,IAAI,EAAE;AALL,OALO;AAFN,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,GAmBI,IApBR;AAuBA,sBACI;AAAK,IAAA,SAAS,EAAEzB,MAAM,CAAC0B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKvB,OAAO,KAAG,QAAV,GAAqBK,QAArB,GAAgCa,SADrC,CADJ;AAQH,CAhED;;AAkEA,eAAepB,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Line, HorizontalBar } from 'react-chartjs-2';\r\nimport {fetchDailyData} from './../../api'\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({dataset,country}) => {\r\n    const [dailyData,setDailyData] = useState({});\r\n    useEffect(()=>{\r\n        async function loadData() {\r\n            const data = await fetchDailyData();\r\n            setDailyData(data);\r\n        }\r\n        loadData();\r\n      \r\n    },[]);\r\n\r\n    const barChart = (\r\n\r\n        dataset.confirmed ? \r\n            <HorizontalBar\r\n              data={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [\r\n                  {\r\n                    label: 'People',\r\n                    backgroundColor: ['rgba(164, 17, 184, 0.5)', 'rgba(39, 145, 13, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                    data: [dataset.confirmed.value, dataset.recovered.value, dataset.deaths.value],\r\n                  },\r\n                ],\r\n              }}\r\n              options={{\r\n                legend: { display: false },\r\n                title: { display: true, text: `Current state in ${country}` },\r\n              }}\r\n            />\r\n        :null\r\n    )\r\n\r\n    const lineChart = (\r\n        dailyData[0] ? (\r\n          <Line\r\n            data={{\r\n              labels: dailyData.map(({ date }) => date),\r\n              datasets: [{\r\n                data: dailyData.map((data) => data.confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#a411b880',\r\n                fill: true,\r\n              }, {\r\n                data: dailyData.map((data) => data.deaths),\r\n                label: 'Deaths',\r\n                borderColor: '#ff000080',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                fill: true,\r\n              },\r\n              ],\r\n            }}\r\n          />\r\n        ) : null\r\n      );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country!=='Global' ? barChart : lineChart}\r\n        </div>\r\n        \r\n       \r\n       \r\n    );\r\n}\r\n\r\nexport default Chart;"]},"metadata":{},"sourceType":"module"}