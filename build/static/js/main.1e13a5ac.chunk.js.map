{"version":3,"sources":["components/Cards/Cards.module.css","api/index.js","components/Chart/Chart.jsx","components/CountryBar/CountryBar.jsx","components/Cards/Cards.jsx","App.jsx","index.js","App.module.css","assets/header.png","components/Chart/Chart.module.css","components/CountryBar/CountryBar.module.css"],"names":["module","exports","url","fetchData","country","a","dinamycUrl","axios","get","response","data","fetchCountries","countries","map","name","fetchDailyData","confirmed","deaths","date","reportDate","total","Chart","dataset","useState","dailyData","setDailyData","useEffect","loadData","barChart","labels","datasets","label","backgroundColor","value","recovered","options","legend","display","title","text","lineChart","borderColor","fill","className","styles","container","CountryBar","setCountry","setCountries","cx","formControl","onChange","e","target","key","Cards","Card","card","infected","Body","Title","Text","start","end","duration","separator","Date","lastUpdate","toDateString","App","setData","loading","setIsLoading","dataCards","image","src","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e13a5ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3SPPw\",\"card\":\"Cards_card__30bKO\",\"infected\":\"Cards_infected__1cerK\",\"recovered\":\"Cards_recovered__oNYKn\",\"deaths\":\"Cards_deaths__6RAc8\"};","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n  let dinamycUrl = url;\n\n  if (country!=='Global') {\n    dinamycUrl = `${url}/countries/${country}`;\n  }\n\n  try {\n    const response = await axios.get(dinamycUrl);\n    return response.data;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchCountries = async () => {\n  try {\n    const response = await axios.get(`${url}/countries`);\n    return response.data.countries.map((country) => country.name);\n  } catch (error) {\n    return error;\n  }\n};\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`);\n\n    return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n  } catch (error) {\n    return error;\n  }\n};\n","import React, { useEffect, useState } from 'react';\r\nimport { Line, HorizontalBar } from 'react-chartjs-2';\r\nimport {fetchDailyData} from './../../api'\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({dataset,country}) => {\r\n    const [dailyData,setDailyData] = useState({});\r\n    useEffect(()=>{\r\n        async function loadData() {\r\n            const data = await fetchDailyData();\r\n            setDailyData(data);\r\n        }\r\n        loadData();\r\n      \r\n    },[]);\r\n\r\n    const barChart = (\r\n\r\n        dataset.confirmed ? \r\n            <HorizontalBar\r\n              data={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [\r\n                  {\r\n                    label: 'People',\r\n                    backgroundColor: ['rgba(164, 17, 184, 0.5)', 'rgba(39, 145, 13, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                    data: [dataset.confirmed.value, dataset.recovered.value, dataset.deaths.value],\r\n                  },\r\n                ],\r\n              }}\r\n              options={{\r\n                legend: { display: false },\r\n                title: { display: true, text: `Current state in ${country}` },\r\n              }}\r\n            />\r\n        :null\r\n    )\r\n\r\n    const lineChart = (\r\n        dailyData[0] ? (\r\n          <Line\r\n            data={{\r\n              labels: dailyData.map(({ date }) => date),\r\n              datasets: [{\r\n                data: dailyData.map((data) => data.confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#a411b880',\r\n                fill: true,\r\n              }, {\r\n                data: dailyData.map((data) => data.deaths),\r\n                label: 'Deaths',\r\n                borderColor: '#ff000080',\r\n                backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                fill: true,\r\n              },\r\n              ],\r\n            }}\r\n          />\r\n        ) : null\r\n      );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country!=='Global' ? barChart : lineChart}\r\n        </div>\r\n        \r\n       \r\n       \r\n    );\r\n}\r\n\r\nexport default Chart;","import React, { useEffect, useState } from 'react';\r\nimport {fetchCountries} from './../../api';\r\nimport styles from './CountryBar.module.css';\r\nimport cx from 'classnames';\r\nconst CountryBar = ({setCountry}) => {\r\n\r\n    const [countries,setCountries] = useState([]);\r\n    useEffect(()=>{\r\n        async function loadData() {\r\n            const data = await fetchCountries();\r\n            setCountries(data);\r\n        }\r\n        loadData();\r\n    },[]);\r\n\r\n\r\n    return (\r\n  \r\n        <select className={cx(styles.formControl)} onChange={(e)=>{setCountry(e.target.value)}}>\r\n            <option key={-1} value='Global'>Global</option>\r\n            {countries.map((country,key) =>\r\n                <option key={key} value={country}>{country}</option>\r\n            )}\r\n        </select>\r\n        \r\n    );\r\n}\r\n\r\nexport default CountryBar;","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\nimport styles from './Cards.module.css';\n\n\nconst Cards = ({data}) => {\n    return (\n        <div className={styles.container}>\n            <Card className={cx(styles.card,styles.infected)}>\n                <Card.Body>\n                    <Card.Title>Infected</Card.Title>\n                    <h2>\n                    <Card.Text>\n                        <CountUp start={0} end={data.confirmed.value} duration={2.75} separator=\",\" />         \n                    </Card.Text>\n                    </h2>\n                    \n                    <Card.Text>\n                        Number of active cases of COVID-19.    \n                    </Card.Text>\n                    \n                    <h3>\n                    <Card.Text>\n                        {new Date(data.lastUpdate).toDateString()}\n                    </Card.Text>\n                    </h3>\n                   \n                </Card.Body>\n            </Card>\n\n            <Card className={cx(styles.card,styles.recovered)}>\n                <Card.Body>\n                    <Card.Title>Recovered</Card.Title>\n                    <h2>\n                    <Card.Text>\n                        <CountUp start={0} end={data.recovered.value} duration={2.75} separator=\",\" />         \n                    </Card.Text>\n                    </h2>\n                    \n                    <Card.Text>\n                        Number of recovered cases of COVID-19.    \n                    </Card.Text>\n                    \n                    <h3>\n                    <Card.Text>\n                        {new Date(data.lastUpdate).toDateString()}\n                    </Card.Text>\n                    </h3>\n                   \n                </Card.Body>\n            </Card>\n\n            <Card className={cx(styles.card,styles.deaths)}>\n                <Card.Body>\n                    <Card.Title>Deaths</Card.Title>\n                    <h2>\n                    <Card.Text>\n                        <CountUp start={0} end={data.deaths.value} duration={2.75} separator=\",\" />         \n                    </Card.Text>\n                    </h2>\n                    \n                    <Card.Text>\n                        Number of deaths cases of COVID-19.    \n                    </Card.Text>\n                    \n                    <h3>\n                    <Card.Text>\n                        {new Date(data.lastUpdate).toDateString()}\n                    </Card.Text>\n                    </h3>\n                   \n                </Card.Body>\n            </Card>\n        </div>    \n        \n    );\n}\n\nexport default Cards;\n","import React, { useState, useEffect, Fragment } from 'react';\r\nimport styles from './App.module.css';\r\nimport image from './assets/header.png';\r\nimport {fetchData} from './api';\r\nimport {Cards,Chart,CountryBar} from './components';\r\n\r\nconst App = () =>{\r\n\r\n  const [country,setCountry] = useState('Global');\r\n  const [data,setData] = useState({});\r\n  const [loading,setIsLoading] = useState(true);\r\n\r\n  useEffect(()=>{\r\n    async function loadData() {\r\n      const dataCards = await fetchData(country);\r\n      setData(dataCards);\r\n      setIsLoading(false)\r\n    }\r\n    loadData();\r\n\r\n  },[country])\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <img className={styles.image} src={image} alt=\"COVID-19\"/>\r\n      {loading\r\n        ?\r\n        <h1>Loading data....</h1>\r\n        :\r\n        (\r\n          <Fragment>\r\n             <br></br>\r\n             <CountryBar\r\n              setCountry={setCountry}\r\n            />\r\n            <Cards\r\n              data={data}\r\n            />\r\n           \r\n            <Chart\r\n              dataset={data}\r\n              country={country}\r\n            />\r\n          </Fragment>\r\n       )\r\n      \r\n      }\r\n      \r\n      \r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.jsx';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1bsET\",\"image\":\"App_image__3-h6R\"};","module.exports = __webpack_public_path__ + \"static/media/header.2dd869aa.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3Cv02\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryBar_formControl__1AeTP\"};"],"sourceRoot":""}